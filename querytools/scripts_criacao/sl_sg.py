import psycopg2


def criar_tabela_sl_sg():
    # Configurações do banco de dados
    conexao = psycopg2.connect(
        database="teste_dds",
        user="postgres",
        password="admin",
        host="localhost",
        port=5432,
    )

    # Criação da tabela
    with conexao.cursor() as cursor:
        cursor.execute(
            """
            CREATE TABLE IF NOT EXISTS public.sl_sg
            (
                id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
                data timestamp with time zone,
                velocityx double precision,
                velocityy double precision,
                level double precision,
                stderror1 double precision,
                stderror2 double precision,
                stderror3 double precision,
                snr1 double precision,
                snr2 double precision,
                snr3 double precision,
                signalamp1 integer,
                signalamp2 integer,
                signalamp3 integer,
                noise1 integer,
                noise2 integer,
                noise3 integer,
                icedetection integer,
                heading double precision,
                pitch double precision,
                roll double precision,
                stddevheading double precision,
                stddevpitch double precision,
                stddevroll double precision,
                temperature double precision,
                pressure double precision,
                stddevpressure double precision,
                voltage double precision,
                cellbegin double precision,
                cellend double precision,
                speed double precision,
                direction double precision,
                area double precision,
                flow double precision,
                fk_siteinformation bigint,
                file_name text,
                linha integer,
                CONSTRAINT sl_sg_pkey PRIMARY KEY (id),
                CONSTRAINT sl_sg_data_fk_siteinformation_unique UNIQUE (data, fk_siteinformation),
                CONSTRAINT sl_sg_fk_siteinformation FOREIGN KEY (fk_siteinformation)
                    REFERENCES public.siteinformation (id) MATCH SIMPLE
                    ON UPDATE NO ACTION
                    ON DELETE NO ACTION
            )
            """
        )
        # Criação do índice
        cursor.execute(
            """
            CREATE INDEX IF NOT EXISTS idx_unique_data_fk_siteinformation
            ON public.sl_sg USING btree
            (data, fk_siteinformation);
            """
        )

    # Commit das alterações e fechamento da conexão
    conexao.commit()
    conexao.close()


# Chamada da função
criar_tabela_sl_sg()
