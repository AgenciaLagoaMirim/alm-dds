# Generated by Django 4.2 on 2024-02-26 17:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Channelsummary",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("top", models.FloatField(blank=True, db_column="Top", null=True)),
                (
                    "middle",
                    models.FloatField(blank=True, db_column="Middle", null=True),
                ),
                (
                    "bottom",
                    models.FloatField(blank=True, db_column="Bottom", null=True),
                ),
                ("left", models.FloatField(blank=True, db_column="Left", null=True)),
                ("right", models.FloatField(blank=True, db_column="Right", null=True)),
                ("total", models.FloatField(blank=True, db_column="Total", null=True)),
                (
                    "movingbedpercentcorrection",
                    models.FloatField(
                        blank=True, db_column="MovingBedPercentCorrection", null=True
                    ),
                ),
            ],
            options={
                "db_table": "channelsummary",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Qrev",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "meanwidth",
                    models.FloatField(blank=True, db_column="MeanWidth", null=True),
                ),
                (
                    "widthcov",
                    models.FloatField(blank=True, db_column="WidthCOV", null=True),
                ),
                (
                    "meanarea",
                    models.FloatField(blank=True, db_column="MeanArea", null=True),
                ),
                (
                    "areacov",
                    models.FloatField(blank=True, db_column="AreaCOV", null=True),
                ),
                (
                    "meanboatspeed",
                    models.FloatField(blank=True, db_column="MeanBoatSpeed", null=True),
                ),
                (
                    "meanqovera",
                    models.FloatField(blank=True, db_column="MeanQoverA", null=True),
                ),
                (
                    "meancoursemadegood",
                    models.FloatField(
                        blank=True, db_column="MeanCourseMadeGood", null=True
                    ),
                ),
                (
                    "meanflowdirection",
                    models.FloatField(
                        blank=True, db_column="MeanFlowDirection", null=True
                    ),
                ),
                (
                    "meandepth",
                    models.FloatField(blank=True, db_column="MeanDepth", null=True),
                ),
                (
                    "maximumdepth",
                    models.FloatField(blank=True, db_column="MaximumDepth", null=True),
                ),
                (
                    "maximumwaterspeed",
                    models.FloatField(
                        blank=True, db_column="MaximumWaterSpeed", null=True
                    ),
                ),
                (
                    "numberoftransects",
                    models.IntegerField(
                        blank=True, db_column="NumberofTransects", null=True
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(blank=True, db_column="Duration", null=True),
                ),
                (
                    "leftqper",
                    models.FloatField(blank=True, db_column="LeftQPer", null=True),
                ),
                (
                    "rightqper",
                    models.FloatField(blank=True, db_column="RightQPer", null=True),
                ),
                (
                    "invalidcellsqper",
                    models.FloatField(
                        blank=True, db_column="InvalidCellsQPer", null=True
                    ),
                ),
                (
                    "invalidensqper",
                    models.FloatField(
                        blank=True, db_column="InvalidEnsQPer", null=True
                    ),
                ),
                (
                    "userrating",
                    models.TextField(blank=True, db_column="UserRating", null=True),
                ),
                (
                    "dischargeppdefault",
                    models.FloatField(
                        blank=True, db_column="DischargePPDefault", null=True
                    ),
                ),
            ],
            options={
                "db_table": "qrev",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="QrevData",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("file_name", models.TextField(blank=True, null=True)),
                (
                    "numberoftransects",
                    models.IntegerField(
                        blank=True, db_column="NumberofTransects", null=True
                    ),
                ),
                ("startdate", models.DateTimeField(blank=True, null=True)),
                ("enddate", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "qrev_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Siteinformation",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "stationname",
                    models.TextField(blank=True, db_column="StationName", null=True),
                ),
                ("siteid", models.TextField(blank=True, db_column="SiteID", null=True)),
            ],
            options={
                "db_table": "siteinformation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SlSg",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("data", models.DateTimeField(blank=True, null=True)),
                ("velocityx", models.FloatField(blank=True, null=True)),
                ("velocityy", models.FloatField(blank=True, null=True)),
                ("level", models.FloatField(blank=True, null=True)),
                ("stderror1", models.FloatField(blank=True, null=True)),
                ("stderror2", models.FloatField(blank=True, null=True)),
                ("stderror3", models.FloatField(blank=True, null=True)),
                ("snr1", models.FloatField(blank=True, null=True)),
                ("snr2", models.FloatField(blank=True, null=True)),
                ("snr3", models.FloatField(blank=True, null=True)),
                ("signalamp1", models.IntegerField(blank=True, null=True)),
                ("signalamp2", models.IntegerField(blank=True, null=True)),
                ("signalamp3", models.IntegerField(blank=True, null=True)),
                ("noise1", models.IntegerField(blank=True, null=True)),
                ("noise2", models.IntegerField(blank=True, null=True)),
                ("noise3", models.IntegerField(blank=True, null=True)),
                ("icedetection", models.IntegerField(blank=True, null=True)),
                ("heading", models.FloatField(blank=True, null=True)),
                ("pitch", models.FloatField(blank=True, null=True)),
                ("roll", models.FloatField(blank=True, null=True)),
                ("stddevheading", models.FloatField(blank=True, null=True)),
                ("stddevpitch", models.FloatField(blank=True, null=True)),
                ("stddevroll", models.FloatField(blank=True, null=True)),
                ("temperature", models.FloatField(blank=True, null=True)),
                ("pressure", models.FloatField(blank=True, null=True)),
                ("stddevpressure", models.FloatField(blank=True, null=True)),
                ("voltage", models.FloatField(blank=True, null=True)),
                ("cellbegin", models.FloatField(blank=True, null=True)),
                ("cellend", models.FloatField(blank=True, null=True)),
                ("speed", models.FloatField(blank=True, null=True)),
                ("direction", models.FloatField(blank=True, null=True)),
                ("area", models.FloatField(blank=True, null=True)),
                ("flow", models.FloatField(blank=True, null=True)),
                ("file_name", models.TextField(blank=True, null=True)),
                ("linha", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "sl_sg",
                "managed": False,
            },
        ),
    ]
